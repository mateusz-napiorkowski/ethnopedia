// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test deleteArtworks. Artwork deletion successful: Artwork.count is called once, has right filter and is part of the transaction 1`] = `
[
  [
    {
      "_id": {
        "$in": [
          "662e92a5d628570afa5357bc",
          "662e928b11674920c8cc0abc",
        ],
      },
    },
    {
      "session": {
        "abortTransaction": [MockFunction],
        "commitTransaction": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "endSession": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "startTransaction": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
    },
  ],
]
`;

exports[`Test deleteArtworks. Artwork deletion successful: Artwork.deleteMany is called once, has right filter and is part of the transaction 1`] = `
[
  [
    {
      "_id": {
        "$in": [
          "662e92a5d628570afa5357bc",
          "662e928b11674920c8cc0abc",
        ],
      },
    },
    {
      "session": {
        "abortTransaction": [MockFunction],
        "commitTransaction": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "endSession": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "startTransaction": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
    },
  ],
]
`;

exports[`Test deleteArtworks. Artwork deletion successful: Authorization is successful (jwt.verify is called and returns decoded user data) 1`] = `
[MockFunction] {
  "calls": [
    [
      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3Rvd3kiLCJmaXJzdE5hbWUiOiJ0ZXN0b3d5IiwidXNlcklkIjoiNjZiNjUwNmZiYjY0ZGYxNjVlOGE5Y2U2IiwiaWF0IjoxNzI0MTg0MTE0LCJleHAiOjE3MjUxODQxMTR9.fzHPaXFMzQTVUf9IdZ0G6oeiaeccN-rDSjRS3kApqlA",
      undefined,
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": {
        "exp": 1726211851,
        "firstName": "testowy",
        "iat": 1725211851,
        "userId": "12b2343fbb64df643e8a9ce6",
        "username": "testowy",
      },
    },
  ],
}
`;

exports[`Test deleteArtworks. Artwork deletion successful: Status code equals 200 1`] = `200`;

exports[`Test deleteArtworks. Artwork deletion successful: deletedCount equals 2 1`] = `"{"acknowledged":true,"deletedCount":2}"`;

exports[`Test deleteArtworks. Artwork deletion successful: startSession is called once 1`] = `
[MockFunction] {
  "calls": [
    [],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`Test deleteArtworks. Artwork deletion successful: startTransaction, commitTransaction, endSession are called once 1`] = `
{
  "abortTransaction": [MockFunction],
  "commitTransaction": [MockFunction] {
    "calls": [
      [],
    ],
    "results": [
      {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "endSession": [MockFunction] {
    "calls": [
      [],
    ],
    "results": [
      {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "startTransaction": [MockFunction] {
    "calls": [
      [],
    ],
    "results": [
      {
        "type": "return",
        "value": undefined,
      },
    ],
  },
}
`;

exports[`Test deleteArtworks. Couldn't establish session for database transaction: Authorization is successful (jwt.verify is called and returns decoded user data) 1`] = `
[MockFunction] {
  "calls": [
    [
      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3Rvd3kiLCJmaXJzdE5hbWUiOiJ0ZXN0b3d5IiwidXNlcklkIjoiNjZiNjUwNmZiYjY0ZGYxNjVlOGE5Y2U2IiwiaWF0IjoxNzI0MTg0MTE0LCJleHAiOjE3MjUxODQxMTR9.fzHPaXFMzQTVUf9IdZ0G6oeiaeccN-rDSjRS3kApqlA",
      undefined,
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": {
        "exp": 1726211851,
        "firstName": "testowy",
        "iat": 1725211851,
        "userId": "12b2343fbb64df643e8a9ce6",
        "username": "testowy",
      },
    },
  ],
}
`;

exports[`Test deleteArtworks. Couldn't establish session for database transaction: Session for database transaction is not established (mongoose.startSession throws an error) 1`] = `[Error: example mongoose.startSession Error]`;

exports[`Test deleteArtworks. Couldn't establish session for database transaction: Status code equals 503 1`] = `503`;

exports[`Test deleteArtworks. Incorrect payload: Authorization is successful (jwt.verify is called and returns decoded user data) 1`] = `
[MockFunction] {
  "calls": [
    [
      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3Rvd3kiLCJmaXJzdE5hbWUiOiJ0ZXN0b3d5IiwidXNlcklkIjoiNjZiNjUwNmZiYjY0ZGYxNjVlOGE5Y2U2IiwiaWF0IjoxNzI0MTg0MTE0LCJleHAiOjE3MjUxODQxMTR9.fzHPaXFMzQTVUf9IdZ0G6oeiaeccN-rDSjRS3kApqlA",
      undefined,
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": {
        "exp": 1726211851,
        "firstName": "testowy",
        "iat": 1725211851,
        "userId": "12b2343fbb64df643e8a9ce6",
        "username": "testowy",
      },
    },
  ],
}
`;

exports[`Test deleteArtworks. Incorrect payload: Payload is incorrect (req.body.ids is undefined) 1`] = `undefined`;

exports[`Test deleteArtworks. Incorrect payload: Status code equals 400 1`] = `400`;

exports[`Test deleteArtworks. Invalid jwt: Authorization is unsuccessful (jwt.verify is called with wrong token and throws an error) 1`] = `
[MockFunction] {
  "calls": [
    [
      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3Rvd3kiLCJmaXJzdE5hbWUiOiJ0ZXN0b3d5IiwidXNlcklkIjoiNjZiNjUwNmZiYjY0ZGYxNjVlOGE5Y2U2IiwiaWF0IjoxNzI0MTg0MTE0LCJleHAiOjE3MjUxODQxMTR9.fzHPaXFMzQTVUf9IdZ0G6oeiaeccN-rDSjRS3kApqlA",
      undefined,
    ],
  ],
  "results": [
    {
      "type": "throw",
      "value": [Error],
    },
  ],
}
`;

exports[`Test deleteArtworks. Invalid jwt: Status code equals 401 1`] = `401`;

exports[`Test deleteArtworks. No jwt provided: Authorization is unsuccessful (jwt.verify is not called) 1`] = `[]`;

exports[`Test deleteArtworks. No jwt provided: Status code equals 400 1`] = `400`;
